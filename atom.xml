<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Starsea's Note]]></title>
  <link href="http://starsea.github.io/atom.xml" rel="self"/>
  <link href="http://starsea.github.io/"/>
  <updated>2014-05-15T16:20:36+08:00</updated>
  <id>http://starsea.github.io/</id>
  <author>
    <name><![CDATA[starsea]]></name>
    <email><![CDATA[starsea820@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ab 压力测试]]></title>
    <link href="http://starsea.github.io/posts/ab-ya-li-ce-shi/"/>
    <updated>2014-05-15T15:23:02+08:00</updated>
    <id>http://starsea.github.io/posts/ab-ya-li-ce-shi</id>
    <content type="html"><![CDATA[<p>想必很多人都知道 <code>ab</code> 是干啥的,网上也有很多介绍用 <code>ab</code> 做压力测试的文章,但是大多对其结果介绍的都是稀里糊涂的.这里我们简单介绍下 <code>ab</code> .</p>

<h2>Usage</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ab -n 5000 -c 200 http://thisobj.com/
</span></code></pre></td></tr></table></div></figure>


<p>这里表示总共对目标网址发起5000个请求 并发为200 那么也就是说 <code>一共会发起25次,每次并发200的请求.</code></p>

<!--more-->


<h3>Run</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>haidx@mbp:~/Documents<span class="o">]</span><span class="nv">$ </span>ab -n 5000 -c 200 http://thisobj.com/
</span><span class='line'>This is ApacheBench, Version 2.3 &lt;<span class="nv">$Revision</span>: 655654 <span class="nv">$&gt;</span>
</span><span class='line'>Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
</span><span class='line'>Licensed to The Apache Software Foundation, http://www.apache.org/
</span><span class='line'>
</span><span class='line'>Benchmarking thisobj.com <span class="o">(</span>be patient<span class="o">)</span>
</span><span class='line'>Completed 500 requests
</span><span class='line'>Completed 1000 requests
</span><span class='line'>Completed 1500 requests
</span><span class='line'>Completed 2000 requests
</span><span class='line'>Completed 2500 requests
</span><span class='line'>Completed 3000 requests
</span><span class='line'>Completed 3500 requests
</span><span class='line'>Completed 4000 requests
</span><span class='line'>Completed 4500 requests
</span><span class='line'>Completed 5000 requests
</span><span class='line'>Finished 5000 requests
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Server Software:        nginx/1.7.0
</span><span class='line'>Server Hostname:        thisobj.com
</span><span class='line'>Server Port:            80
</span><span class='line'>
</span><span class='line'>Document Path:          /
</span><span class='line'>Document Length:        16635 bytes
</span><span class='line'>
</span><span class='line'>Concurrency Level:      200
</span><span class='line'>Time taken <span class="k">for </span>tests:   451.574 seconds
</span><span class='line'>Complete requests:      5000
</span><span class='line'>Failed requests:        232
</span><span class='line'>   <span class="o">(</span>Connect: 0, Receive: 0, Length: 232, Exceptions: 0<span class="o">)</span>
</span><span class='line'>Write errors:           0
</span><span class='line'>Non-2xx responses:      232
</span><span class='line'>Total transferred:      80371251 bytes
</span><span class='line'>HTML transferred:       79357714 bytes
</span><span class='line'>Requests per second:    11.07 <span class="o">[</span><span class="c">#/sec] (mean)</span>
</span><span class='line'>Time per request:       18062.978 <span class="o">[</span>ms<span class="o">]</span> <span class="o">(</span>mean<span class="o">)</span>
</span><span class='line'>Time per request:       90.315 <span class="o">[</span>ms<span class="o">]</span> <span class="o">(</span>mean, across all concurrent requests<span class="o">)</span>
</span><span class='line'>Transfer rate:          173.81 <span class="o">[</span>Kbytes/sec<span class="o">]</span> received
</span><span class='line'>
</span><span class='line'>Connection Times <span class="o">(</span>ms<span class="o">)</span>
</span><span class='line'>              min  mean<span class="o">[</span>+/-sd<span class="o">]</span> median   max
</span><span class='line'>Connect:       71   98  64.6     79    1243
</span><span class='line'>Processing:   316 17286 11229.2  13360   75174
</span><span class='line'>Waiting:      244 17189 11246.3  13268   75174
</span><span class='line'>Total:        389 17384 11230.9  13453   75299
</span><span class='line'>
</span><span class='line'>Percentage of the requests served within a certain <span class="nb">time</span> <span class="o">(</span>ms<span class="o">)</span>
</span><span class='line'>  50%  13453
</span><span class='line'>  66%  15054
</span><span class='line'>  75%  15717
</span><span class='line'>  80%  17968
</span><span class='line'>  90%  27504
</span><span class='line'>  95%  44105
</span><span class='line'>  98%  60217
</span><span class='line'>  99%  60277
</span><span class='line'> 100%  75299 <span class="o">(</span>longest request<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里最重要的就是这几个个参数了 <code>Requests per second</code> <code>Time per request</code></p>

<blockquote><p><code>Requests per second</code> 也就是我们常说的 <code>Rps</code> or <code>Qps</code> 表示每秒可以处理的请求个数.
这里有两个 Time per request 第一个表示<strong>每一次</strong>请求所需要的平均时间, 由于我们这里一次请求包含25个并发,这里一个并发的时间就是第二个参数.(cpu是分时间片轮流执行请求的，多并发的情况下，一个并发上的请求时需要等待这么长时间才能得到下一个时间片。)</p></blockquote>

<p>所以我们可以发现</p>

<blockquote><p>rps = 1000 / (the first time pre request)</p>

<p>the firest time pre requrest = the second time rpe request * 一个请求包含的并发数</p></blockquote>

<h3>参考文献</h3>

<ul>
<li><a href="http://xinwo.acg.ac/sbc-and-qps/">http://xinwo.acg.ac/sbc-and-qps/</a></li>
<li><a href="http://www.nginx.cn/110.html">http://www.nginx.cn/110.html</a></li>
<li><a href="http://www.ha97.com/4617.html">http://www.ha97.com/4617.html</a><p class='post-footer'>&nbsp;原文地址：<a href='http://starsea.github.io/posts/ab-ya-li-ce-shi/'><a href="http://starsea.github.io/posts/ab-ya-li-ce-shi/">http://starsea.github.io/posts/ab-ya-li-ce-shi/</a></a><br/>&nbsp;版权声明：自由转载-非商用-非衍生-保持署名| <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git rm 与 rm 的区别]]></title>
    <link href="http://starsea.github.io/posts/what-is-the-difference-between-git-rm-and-rm/"/>
    <updated>2014-05-12T15:04:12+08:00</updated>
    <id>http://starsea.github.io/posts/what-is-the-difference-between-git-rm-and-rm</id>
    <content type="html"><![CDATA[<p class='post-footer'>&nbsp;原文地址：<a href='http://starsea.github.io/posts/what-is-the-difference-between-git-rm-and-rm/'>http://starsea.github.io/posts/what-is-the-difference-between-git-rm-and-rm/</a><br/>&nbsp;版权声明：自由转载-非商用-非衍生-保持署名| <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[install octopress on mac os x 10.9]]></title>
    <link href="http://starsea.github.io/posts/install-octopress-on-mac-os-x-10-dot-9/"/>
    <updated>2014-05-09T14:53:37+08:00</updated>
    <id>http://starsea.github.io/posts/install-octopress-on-mac-os-x-10-dot-9</id>
    <content type="html"><![CDATA[<p>安装方法就不多说了 详情见参考文献 说下注意初学者难理解的地方</p>

<p>整个项目分为两个部分 一部分是博客的源码 也就是source分支(除开<code>_deploy</code>目录之外的其他所有文件)<br/>
还有一部分是网站的静态资源(打开网站你看到的全部都是静态资源 所有的页面都是纯html页面) 这部分属于master分支 也就是<code>_deploy</code>整个目录 你可以这样看看</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>haidx@mbp:~/repo/octopress<span class="o">]</span><span class="nv">$ </span><span class="nb">cd </span>_deploy/
</span><span class='line'><span class="o">[</span>haidx@mbp:~/repo/octopress/_deploy<span class="o">]</span><span class="nv">$ </span>git status
</span><span class='line'><span class="c"># On branch master</span>
</span><span class='line'>nothing to commit, working directory clean
</span><span class='line'><span class="o">[</span>haidx@mbp:~/repo/octopress/_deploy<span class="o">]</span><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>安装好之后 运行 <code>rake new_post["myTitle"]</code> 会自动生成一个 markdown 文件</p>

<p>文章生成在目录下的<code>source/_posts</code>目录下。文章是markdown格式的。可以通过 <code>Mou</code> 软件来编辑保存。</p>

<p><code>rake generate</code> 根据 <code>_config.yml</code> 和 <code>source/_posts</code>下的 markdown 文件生成网站所有需要的静态资源.</p>

<p><code>rake deploy</code> 这个命令是把网站所有生成的静态资源放到 _deploy 目录下,然后把该目录下得所有文件推送到github的 master 分支.</p>

<p>发布之后运行<code>git status</code>之后发现还是有很多修改文件 , 没错 因为 <code>rake deploy</code> 并没有 push source 分支过去. 如有需要 可以手动 push</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;Initial source commit&#39;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>[参考]</p>

<ul>
<li><a href="http://yang3wei.github.io/blog/2013/01/28/zhuan-zai-zai-github-shang-shi-yong-octopress/">zhuan-zai-zai-github-shang-shi-yong-octopress</a></li>
<li><a href="http://www.ikitweb.com/blog/2014/04/11/install-ocotpress-on-mac-and-host-website-on-github/">install-ocotpress-on-mac-and-host-website-on-github</a></li>
<li><a href="http://blog.csdn.net/jackystudio/article/details/16353865">像黑客一样写博客</a></li>
<li><a href="http://blog.segmentfault.com/yaashion_xiang/1190000000364677">http://blog.segmentfault.com/yaashion_xiang/1190000000364677</a></li>
<li><a href="http://biaobiaoqi.me/blog/2013/07/10/decorate-octopress/">http://biaobiaoqi.me/blog/2013/07/10/decorate-octopress/</a></li>
</ul>


<p class='post-footer'>&nbsp;原文地址：<a href='http://starsea.github.io/posts/install-octopress-on-mac-os-x-10-dot-9/'>http://starsea.github.io/posts/install-octopress-on-mac-os-x-10-dot-9/</a><br/>&nbsp;版权声明：自由转载-非商用-非衍生-保持署名| <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 阅读笔记(一)]]></title>
    <link href="http://starsea.github.io/posts/git-read-note-1/"/>
    <updated>2014-05-09T11:18:15+08:00</updated>
    <id>http://starsea.github.io/posts/git-read-note-1</id>
    <content type="html"><![CDATA[<p>设置参数
<code>git config —global  user.name 'starsea'</code></p>

<ul>
<li>system 编辑 /etc/gitconfig</li>
<li>global 编辑 ~/.gitconfig</li>
<li>不带参数 编辑 .git/config</li>
</ul>


<p>以上依次覆盖配置参数</p>

<p>本篇文章将记录  <code>git config diff igonre add</code> 等基础命令.</p>

<!--more-->


<h2>git add</h2>

<blockquote><p>这是个多功能命令，根据目标文件的状态不同，此命令的效果也不同：可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等</p></blockquote>

<p>如果已经<code>git add</code>一个文件了，再对它进行修改 那么运行<code>git status</code>会发现该文件出现<strong>两次</strong>实际上 Git 只不过暂存了你运行 <code>git add</code> 命令时的版本，如果现在提交，那么提交的是添加注释前的版本，而非当前工作目录中的版本。所以，运行了 <code>git add</code> 之后又作了修订的文件，需要重新运行 <code>git add</code> 把最新版本重新暂存起来：</p>

<h2>gitignore</h2>

<h4>规范：</h4>

<ul>
<li>所有空行或者以注释符号 <code>＃</code> 开头的行都会被 Git 忽略。</li>
<li>可以使用标准的 <code>glob</code> 模式匹配。</li>
<li>匹配模式最后跟反斜杠（<code>/</code>）说明要忽略的是目录。</li>
<li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（<code>!</code>）取反。</li>
</ul>


<h4>什么是glob模式</h4>

<blockquote><p>所谓的 <code>glob</code> 模式是指 shell 所使用的简化了的正则表达式。星号（*）匹配零个或多个任意字符；[abc] 匹配任何一个列在方括号中的字符（这个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；问号（?）只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 [0-9] 表示匹配所有 0 到 9 的数字）。</p></blockquote>

<pre><code># 此为注释 – 将被 Git 忽略
# 忽略所有 .a 结尾的文件
*.a
# 但 lib.a 除外
!lib.a
# 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO
/TODO
# 忽略 build/ 目录下的所有文件
build/
# 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt
doc/*.txt
# ignore all .txt files in the doc/ directory
doc/**/*.txt
</code></pre>

<h2>git diff</h2>

<ul>
<li><code>git diff</code> 比较当前文件和暂存区的差异</li>
<li><code>git diff --cached</code> 比较暂存区和仓库里的快照差异</li>
</ul>


<h2>获取配置</h2>

<pre><code>[haidx@mbp:~/www/cmp]$ git config --list
user.email=xxx@gmail.com
user.name=starsea
core.excludesfile=/Users/haidx/.gitignore
core.autocrlf=input
alias.lg=log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit --
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
core.precomposeunicode=false
remote.origin.url=git@github.com:starsea/cmp.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.master.remote=origin
branch.master.merge=refs/heads/master
</code></pre>

<h2>获取本地配置</h2>

<pre><code>[haidx@mbp:~/www/cmp]$ git config --local --list
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
core.precomposeunicode=false
remote.origin.url=git@github.com:starsea/cmp.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.master.remote=origin
branch.master.merge=refs/heads/master


[haidx@mbp:~/www/cmp]$ cat .git/config
[core]
     repositoryformatversion = 0
     filemode = true
     bare = false
     logallrefupdates = true
     ignorecase = true
     precomposeunicode = false
[remote "origin"]
     url = git@github.com:starsea/cmp.git
     fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
     remote = origin
     merge = refs/heads/master
</code></pre>

<p class='post-footer'>&nbsp;原文地址：<a href='http://starsea.github.io/posts/git-read-note-1/'>http://starsea.github.io/posts/git-read-note-1/</a><br/>&nbsp;版权声明：自由转载-非商用-非衍生-保持署名| <a href='http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh'>Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
</feed>
