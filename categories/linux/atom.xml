<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Starsea's Note]]></title>
  <link href="http://starsea.github.io/categories/linux/atom.xml" rel="self"/>
  <link href="http://starsea.github.io/"/>
  <updated>2014-07-31T00:21:04+08:00</updated>
  <id>http://starsea.github.io/</id>
  <author>
    <name><![CDATA[starsea]]></name>
    <email><![CDATA[starsea820@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CentOS yum 源的配置与使用]]></title>
    <link href="http://starsea.github.io/posts/yum-detail-centos/"/>
    <updated>2014-07-28T21:03:08+08:00</updated>
    <id>http://starsea.github.io/posts/yum-detail-centos</id>
    <content type="html"><![CDATA[<p>```bash
[root@localhost yum.repos.d]# rpm -Uvh <a href="http://rpms.famillecollet.com/enterprise/remi-release-6.rpm">http://rpms.famillecollet.com/enterprise/remi-release-6.rpm</a>
Retrieving <a href="http://rpms.famillecollet.com/enterprise/remi-release-6.rpm">http://rpms.famillecollet.com/enterprise/remi-release-6.rpm</a>
warning: /var/tmp/rpm-tmp.ZlOIWb: Header V3 DSA/SHA1 Signature, key ID 00f97f56: NOKEY
error: Failed dependencies:</p>

<pre><code>epel-release &gt;= 6 is needed by remi-release-6.5-1.el6.remi.noarch
</code></pre>

<p>```
remi 源需要 epel-release(>6)&hellip;好吧看来还是要按照 epel 啊..</p>

<p>安装 epel
<code>bash
[root@localhost yum.repos.d]# rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
Retrieving http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
warning: /var/tmp/rpm-tmp.vpGlLN: Header V3 RSA/SHA256 Signature, key ID 0608b895: NOKEY
Preparing...                ########################################### [100%]
   1:epel-release           ########################################### [100%]
</code></p>

<p>导入key：
<code>bash
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6
</code>
再次安装remi
<code>bash
$ rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
$ rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-remi
</code>
关于设置级别事情 肯定要安装 priorities
<code>
yum install yum-priorities
</code></p>

<p>首先我们要清楚 remi 源到底有什么东西 <a href="http://rpms.famillecollet.com/enterprise/6.4/remi">这里</a>可以看到每个<code>repository entry</code>对应有哪些东西..点进去就知道了&hellip;我们基本上就是 php mysql..等相关东西..由于我安装这东西就是为了用最新版的 php(orz 虚拟机懒得编译了)</p>

<p>note:</p>

<p>优先级由 1 ~ 99 的 99 个数表示，1 的优先级最高。优先级小的源即使有某软件的较新版本，如果优先级高的源中没有，在启用该插件的情况下，系统也无法安装/升级到该较新版本。图形界面的 YUM 工具一般默认就已经包含了优先级插件。</p>

<p>这里我将 remi 和 remi-php55 都设置 <code>priority=1</code> base 设置为2 epel 设置为5</p>

<p>当然如果在没开启 remi 的情况(enable=0)下你也可以这么做
<code>
yum --enablerepo=remi-php55,remi install php
</code></p>

<ul>
<li><a href="http://wiki.centos.org/PackageManagement/Yum/Priorities">Priorities wiki</a></li>
<li><a href="http://cnzhx.net/blog/remi-repository/">http://cnzhx.net/blog/remi-repository/</a></li>
<li><a href="http://www.cnblogs.com/mchina/archive/2013/01/04/2842275.html">http://www.cnblogs.com/mchina/archive/2013/01/04/2842275.html</a></li>
<li><a href="http://www.trackself.com/archives/2397.html">yum 详细安装</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fix-a-ab-bug-on-mac-os-x]]></title>
    <link href="http://starsea.github.io/posts/fix-ab-bug-on-mac-os-x/"/>
    <updated>2014-07-26T16:27:23+08:00</updated>
    <id>http://starsea.github.io/posts/fix-ab-bug-on-mac-os-x</id>
    <content type="html"><![CDATA[<p>在 mac 下用 ab 压东西只要并发大了经常报错</p>

<p><code>
apr_socket_recv: Connection reset by peer (54)
</code>
好像是 ab 的 bug 那我就重新编译一个吧</p>

<p><code>bash
cd ~/opt
wget http://apache.mirrors.pair.com/httpd/httpd-2.4.10.tar.gz
tar zxvf httpd-2.4.10.tar.gz
cd httpd-2.4.10
./configure
</code>
编译 apache 的时候会碰到下面情况
<code>
checking for APR-util... yes
checking for gcc... /Applications/Xcode.app/Contents/Developer/Toolchains/OSX10.9.xctoolchain/usr/bin/cc
checking whether the C compiler works... no
configure: error: in `/Users/haidx/opt/httpd-2.4.10':
configure: error: C compiler cannot create executables
See `config.log' for more details
</code>
厄..ls 查看了下 这个目录根本不存在嘛 所以哪里来的 gcc..扯犊子</p>

<p>查了下<a href="https://code.google.com/p/modwsgi/issues/detail?id=312">资料</a>发现是 os x 10.8->10.9 升级后 xcode 路径不一致</p>

<p>解决方案:
<code>bash
$ cd /Applications/Xcode.app/Contents/Developer/Toolchains/
$ sudo ln -s XcodeDefault.xctoolchain OSX10.9.xctoolchain
</code>
然后编译通过了. done.
<code>
cd support
make
./ab -c 100 -n 10000 "url"
</code></p>

<p>(update: 2014.07.31)</p>

<p>ps: 其实还是有问题&hellip;系统内核不知道怎么调..不说了都是泪还是别再 mac 下压吧&hellip;</p>

<p>参考:
* <a href="http://www.jsxubar.info/apache-ab-test-error.html">http://www.jsxubar.info/apache-ab-test-error.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centos 安装后需要做的很多事情]]></title>
    <link href="http://starsea.github.io/posts/the-things-need-todo-after-install-centos64/"/>
    <updated>2014-07-17T00:21:23+08:00</updated>
    <id>http://starsea.github.io/posts/the-things-need-todo-after-install-centos64</id>
    <content type="html"><![CDATA[<p>装上 vagrant 了.但是 centos 是 minimal 版的,所以需要做很多东西(不是 mini 版的也需要做很多事 囧rz).其实很多事情都是玩 vps 的时候做过的,但是人老了记性不好,每次都要 google. 所以我觉得还是记录下来比较好.</p>

<p>先添加源吧..啥也不说了 直接上<a href="http://mirrors.aliyun.com/help/centos" title="阿里云开源镜像">阿里云</a>的开源镜像吧..网易萎了..</p>

<!--more-->


<p><code>bash
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
cd /etc/yum.repos.d
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
yum clean all
yum makecache
</code></p>

<h3>sudo command 找不到命令</h3>

<p>编译 nginx 的时候把 nginx 放在了/usr/local/bin 下 用 sudo 执行的时候提示找到不到命令 很奇怪 切换到 root 去执行 nginx 却可以 看了下 root 的path 明明有包含这个路径&hellip;</p>

<p>查了下资料后发现是 sudo 的原因</p>

<p>我们使用 <code>sudo visudo</code> 可以看到</p>

<p>```bash</p>

<h1>Preserving HOME has security implications since many programs</h1>

<h1>use it when searching for configuration files. Note that HOME</h1>

<h1>is already set when the the env_reset option is enabled, so</h1>

<h1>this option is only effective for configurations where either</h1>

<h1>env_reset is disabled or HOME is present in the env_keep list.</h1>

<p>#
Defaults    always_set_home</p>

<p>Defaults    env_reset
Defaults    env_keep =  &ldquo;COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS&rdquo;
Defaults    env_keep += &ldquo;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&rdquo;
Defaults    env_keep += &ldquo;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&rdquo;
Defaults    env_keep += &ldquo;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&rdquo;
Defaults    env_keep += &ldquo;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&rdquo;</p>

<p>#</p>

<h1>Adding HOME to env_keep may enable a user to run unrestricted</h1>

<h1>commands via sudo.</h1>

<p>#</p>

<h1>Defaults   env_keep += &ldquo;HOME&rdquo;</h1>

<p>Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin
<code>``
这里每次调用 sudo 应用的环境变量是..</code>/sbin:/bin:/usr/sbin:/usr/bin` 难怪找不到..</p>

<p>一个简单解决方案就是 <code>vi ~/.bashrc</code>
<code>bash
alias sudo="sudo env PATH=$PATH"
</code></p>

<p>因为系统预装的 sudo 在编译时缺省使用了 &mdash;with-secure-path 参数，因此当前用户使用 sudo 时环境变量 $PATH 被覆盖，通过添加上面那行别名设置，就会在执行 sudo 时把当前的 $PATH 的值再套用上，达到想要的效果。</p>

<p>上面这种 alias 并不是最完美的方式 有时候我们可能会查看一些 sudo 的配置 比如 <code>sudo -l</code> 会翻译成 <code>sudo env PATH=$PATH -l</code> 但是这个命令是无效的&hellip;因为 -l 等参数必须放在env 前面..所以我们还是用<code>sudo visudo</code>手动修改 secure_path 的值把.</p>

<p>当然，最根本的解决办法还是重新编译安装 sudo，编译时不使用 &mdash;with-secure-path 参数即可。有兴趣可以试下</p>

<p>参阅:</p>

<ul>
<li><a href="http://www.ibm.com/developerworks/cn/aix/library/au-sudo/index.html">充分发挥 sudo 的作用</a></li>
<li><a href="http://pickerwengs.blogspot.com/2011/10/sudo-command-not-found.html">sudo-command-not-found</a></li>
</ul>


<h3>locate: command not found</h3>

<p>没有 locate&hellip;
```bash</p>

<h1>yum -y install mlocate</h1>

<h1>updatedb</h1>

<p>```</p>
]]></content>
  </entry>
  
</feed>
