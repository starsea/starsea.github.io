---
layout: post
title: "git rm 与 rm 的区别"
date: 2014-05-12 15:04:12 +0800
comments: true
categories: Git
---
>`git rm` = `rm` + 记录 rm 操作

也就是说执行 `git rm`  之后,本地会把目标文件删除,而且版本控制系统还会将这个删除操作记录下来.
用 `rm` 来删除文件，仅仅是删除了物理文件，没有将其从 `git` 的记录中剔除。

而对于用 `rm` 命令直接删除的文件，执行 `git commit -m "abc"` 提交时，
则不会将删除该文件的操作提交上去。
不过不要紧，即使你已经通过 rm 将某个文件删除掉了，
也可以再通过 `git rm` 命令重新将该文件从 `git` 的记录中删除掉，
这样的话，在执行 `git commit -m "abc"` 以后，也能将这个删除操作提交上去。

如果之前不小心用 `rm` 命令删除了一大批文件呢？
是的，此时用 `git rm` 逐个地再删除一次就显得相当蛋疼了。
所幸还有更方便的处理方案，用如下的方式做提交就没有问题了： `git commit -am "abc"`

`git rm --cached readme.txt`
删除仓库中的记录 保留本地版本